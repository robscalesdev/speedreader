{"version":3,"sources":["Layout/Header/NavElements.js","Layout/Header/index.jsx","Project/Home/Styles.js","apiConfig.js","Project/Home/index.jsx","api/posts.js","Project/Prompts/PromptElements.js","Project/Prompts/index.jsx","api/auth.js","Auth/SignUp.js","Auth/SignIn.js","Auth/SignOut.js","Auth/ChangePassword.js","browserHistory.js","App/Routes.jsx","App/index.jsx","index.jsx"],"names":["NavBar","styled","nav","Logo","span","Speed","Reader","Header","user","ProjectPage","div","SubredditContainer","SubredditWrapper","SubredditButton","button","state","selected","PostsWrapper","PostWrapper","Post","PostHeader","TimeSpan","HeaderArrow","BiTrendingUp","PostBody","p","Prompt","PromptTextWrapper","PromptText","PromptControlsWrapper","ControlWrapper","WpmWrapper","WpmInput","input","StorySelect","PlayButton","PlayIcon","BiPlay","PauseIcon","BiPause","LeftArrow","RiRewindFill","FaStepBackward","RightArrow","FaStepForward","apiUrls","apiUrl","window","location","hostname","Home","posts","setPosts","subs","useState","subreddits","activeSub","setActiveSub","selectedPost","setSelectedPost","storyCount","setStoryCount","allStories","setAllStories","activeStory","setActiveStory","currStory","setCurrStory","play","setPlay","currWord","setCurrWord","wpm","setWpm","collapsePost","expandPost","i","link","url","axios","method","then","response","data","stories","length","catch","handleActiveSub","event","target","name","handlePrevStory","prev","handleNextStory","wordDelay","Promise","resolve","reject","setTimeout","useEffect","getNewPosts","console","error","map","subreddit","onClick","post","created","format","Date","created_utc","split","e","handleClickOnPost","permalink","ups","title","value","onChange","id","PageContainer","windowHeight","PromptContainer","WordWrapper","OptionWrapper","StoryWrapper","WordCountWrapper","ButtonWrapper","Word","h2","WpmSpan","StoryText","WordCountText","StorySelectButton","Prompts","innerHeight","setWindowHeight","addEventListener","useParams","currentCount","setCurrentCount","activeWord","setActiveWord","get","find","children","body","log","to","type","signIn","credentials","email","password","SignUp","props","handleChange","setState","onSignUp","preventDefault","setUser","password_confirmation","passwordConfirmation","res","navigate","this","className","Form","onSubmit","Group","controlId","Label","Control","required","placeholder","Button","variant","Component","SignIn","onSignIn","SignOut","clearUser","shouldNavigate","setShouldNavigate","headers","Authorization","token","signOut","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","createBrowserHistory","ProjectRoutes","history","path","element","App","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58d0edf1.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const NavBar = styled.nav`\n    background: #FFEEE7;\n    margin: 0;\n    padding: 0.5rem 0 0 1rem;\n`\n\nconst Logo = styled.span`\n    font-size: 0.9rem;\n    font-weight: 700;\n\n`\n\nexport const Speed = styled(Logo)`\n    font-family: 'Merriweather Sans';\n    color: #D02500;\n`\n\nexport const Reader = styled(Logo)`\n    font-family: 'Inter';\n    color: #6B1603;\n`","import React from 'react'\nimport { NavBar, Reader, Speed } from './NavElements'\n\nconst Header = ({ user }) => (\n  <NavBar>\n      <Speed>Speed</Speed><Reader>Reader</Reader>\n  </NavBar>\n)\n\nexport default Header\n","import styled from 'styled-components';\nimport {\n  BiPause,\n  BiPlay,\n  BiTrendingUp\n} from 'react-icons/bi';\n\nimport {\n  FaStepBackward,\n  FaStepForward\n} from 'react-icons/fa'\n\nimport {\n  RiRewindFill\n} from 'react-icons/ri'\n\nexport const ProjectPage = styled.div`\n  padding: 1rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  background: #FFEEE7;\n\n  @media screen and (max-width: 1100px) {\n    padding: 2% 3%;\n  }\n`\n\nexport const SubredditContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const SubredditWrapper = styled.div`\n  display: flex; \n  justify-content: flex-start;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`\n\nexport const SubredditButton = styled.button`\n  font-family: 'Merriweather Sans';\n  font-size: 0.75rem;\n  padding: 0 0.5rem;\n  height: 2rem;\n  margin: 0 0.25rem;\n  border-radius: 80px;\n  background: ${state => state.selected ? '#D02500' : '#6B1603'};\n  box-shadow: 0px 8px 24px rgba(208, 37, 0, 0.09);\n  border: none;\n  color: #fff;\n`\n\nexport const PostsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10%;\n\n  @media screen and (max-width: 600px) {\n    padding: 2rem 0.5rem;\n  }\n`\n\nexport const PostWrapper = styled.div`\n  box-shadow: 0px 8px 24px rgba(208, 37, 0, 0.09);\n  margin: 0;\n  margin-bottom: 1.5rem;\n  /* making the edges \"disappear\" */\n  border-radius: 20px; \n  background-color: ${state => state.selected ? '#D02500' : '#FFEEE7'};\n\n  transition: all 100ms ease-in-out;\n`\n\nexport const Post = styled.div`\n  cursor: pointer;\n  border-radius: 8px;\n  background: #FFF;\n  padding: 1.5rem;\n  color: #6B1603;\n\n  &:hover {\n    color: #D02500;\n  }\n`\n\nexport const PostHeader = styled.div`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: #D02500;\n`\n\nexport const TimeSpan = styled.span`\n  margin-left: 0.5rem;\n  color: #c59595;\n  font-weight: 450;\n`\n\nexport const HeaderArrow = styled(BiTrendingUp)`\n  font-size: 1.5rem;\n  margin-right: 0.3rem\n`\n\nexport const PostBody = styled.p`\n`\n\n\nexport const Prompt = styled.div`\n  height: ${state => state.selected ? 15 : 0 }rem;\n  width: 100%;\n  background: #D02500;\n  border-radius: 0 0 20px 20px;\n  transition: all 100ms ease-in-out;\n  position: relative;\n`\n\nexport const PromptTextWrapper = styled.div`\n  height: 10rem;\n  width: 100%;\n  display: ${state => state.selected ? 'flex' : 'none'};\n  align-items: center;\n  justify-content: center;\n`\n\nexport const PromptText = styled.p`\n  color: #fff;\n  font-size: 3rem;\n`\n\nexport const PromptControlsWrapper = styled.div`\n  position: absolute;\n  display: ${state => state.selected ? 'flex' : 'none'};\n  transition: all 100ms ease-in-out;\n  justify-content: center;\n  align-items: center;\n  height: 5rem;\n  bottom: 0;\n  width: 100%;\n  background-color: #6B1603;\n  border-radius: 0 0 8px 8px;\n`\n\nconst ControlWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 0.9rem;\n  color: #fff;\n  max-width: 30%;\n  margin: 0 1rem;\n`\n\nexport const WpmWrapper = styled(ControlWrapper)`\n  left: 0;\n  border-radius: 0 0 0 8px;\n\n  /* .input {\n    width: 3rem;\n  } */\n`\n\nexport const WpmInput = styled.input`\n  width: 3rem;\n  margin: 0 0.4rem;\n`\n\nexport const StorySelect = styled(ControlWrapper)`\n  right: 0;\n  border-radius: 0 0 8px 0;\n`\n\nexport const PlayButton = styled.button`\n  position: relative;\n  border: none;\n  background-color: #fff;\n  border-radius: 999px;\n  height: 3rem;\n  width: 3rem;\n  font-size: 2.5rem;\n`\n\nexport const PlayIcon = styled(BiPlay)`\n  position: absolute;\n  color: #6B1603;\n  left: 0.4rem;\n  top: 0.25rem;\n`\n\nexport const PauseIcon = styled(BiPause)`\n  position: absolute;\n  color: #6B1603;\n  left: 0.25rem;\n  top: 0.25rem;\n`\n\nexport const RewindArrow = styled(RiRewindFill)`\n  margin: 0 0.5rem 0 0.5rem;\n  font-size: 1.2em;\n  cursor: pointer;\n`\n\nexport const LeftArrow = styled(FaStepBackward)`\n  /* margin: 0; */\n  margin: 0 0.5rem;\n  cursor: pointer;\n`\n\nexport const RightArrow = styled(FaStepForward)`\n  margin: 0 0.5rem;\n  cursor: pointer;\n`","let apiUrl\nconst apiUrls = {\n  production: 'https://young-hollows-79394.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { useEffect, useState } from 'react';\nimport {\n    PostWrapper,\n    Post,\n    PostBody,\n    PostHeader,\n    PostsWrapper,\n    ProjectPage,\n    SubredditButton,\n    SubredditContainer,\n    SubredditWrapper,\n    Prompt,\n    PromptTextWrapper,\n    PromptText,\n    PromptControlsWrapper,\n    WpmWrapper,\n    PlayButton,\n    StorySelect,\n    PlayIcon,\n    PauseIcon,\n    LeftArrow,\n    RightArrow,\n    HeaderArrow,\n    WpmInput,\n    TimeSpan\n} from './Styles';\nimport { getNewPosts, getPostContents } from '../../api/posts'\nimport { format } from 'date-fns'\n\nconst Home = ({ user, posts, setPosts }) => {\n\n    const subs = [\n        'WritingPrompts',\n        'AskReddit'\n    ]\n\n    // subreddit state\n    const [subreddits] = useState(subs)\n    const [activeSub, setActiveSub] = useState(subs[0])\n\n    // select story state\n    const [selectedPost, setSelectedPost] = useState(-1)\n    const [storyCount, setStoryCount] = useState(1)\n    const [allStories, setAllStories] = useState([])\n    const [activeStory, setActiveStory] = useState([])\n    const [currStory, setCurrStory] = useState(0)\n\n    // play current story state\n    const [play, setPlay] = useState(false)\n    const [currWord, setCurrWord] = useState(0)\n    const [wpm, setWpm] = useState(250)\n\n    const collapsePost = () => {\n        setSelectedPost(-1)\n        setActiveStory([])\n    }\n\n    const expandPost = (i, link) => {\n        setSelectedPost(i)\n        setCurrStory(0)\n\n        // get one post\n        getPostContents(link)\n        .then(response => {\n            setAllStories(response.data.stories)\n            setActiveStory(response.data.stories[0])\n            setStoryCount(response.data.stories.length)\n        })\n        .catch(() => {\n            setAllStories([])\n            setActiveStory([])\n            setStoryCount(0)\n        })\n    }\n\n    const handleActiveSub = ( event ) => {\n        setActiveSub(event.target.name)\n        collapsePost()\n    }\n\n    // when a prompt is clicked on\n    const handleClickOnPost = (e, link, i) => {\n\n        // default to paused, set to first word of the current story\n        setPlay(false)\n        setCurrWord(0)\n\n        // creates the toggle to make the dropdown disappear\n        if (selectedPost === i) {\n            collapsePost()\n        // if selecting a new story, make it appear\n        } else {\n            expandPost(i, link)\n        }\n        \n    }\n\n    const handlePrevStory = () => {\n        setPlay(false)\n\n        if (currWord > 10) {\n            setCurrWord(0)\n        }\n        else if (currStory > 0) {\n            setCurrStory(prev => prev - 1)\n            setCurrWord(0)\n        }\n    }\n\n    // rewind works, but the button messed up the UI \"flow\"\n    // might implement later\n    // const handleRewindStory = () => {\n    //     if (currWord > 10) {\n    //         setCurrWord(prev => prev - 50)\n    //     } else {\n    //         setCurrWord(0)\n    //     }\n    // }\n\n    const handleNextStory = () => {\n        setPlay(false)\n        \n        if (currStory < storyCount - 1) {\n            setCurrStory(prev => prev + 1)\n            setCurrWord(0)\n        }\n    }\n\n    const wordDelay = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve('foo');\n        }, 60000/wpm);\n    });\n\n    useEffect(() => {\n        // get all posts\n        getNewPosts(activeSub)\n        .then(response => {\n            setPosts(response.data.posts)\n        })\n        .catch(console.error)\n    // eslint-disable-next-line\n    }, [activeSub])\n\n    useEffect(() => {\n        if (allStories.length > 0) {\n            setActiveStory(allStories[currStory])\n        }\n    // eslint-disable-next-line\n    }, [allStories, currStory])\n\n    useEffect(() => {\n        if (play && currWord < activeStory.length) {\n            wordDelay\n                .then(() => {\n                    setCurrWord(prev => prev + 1)\n                })\n        }\n    // eslint-disable-next-line\n    }, [activeStory, currWord, play])\n\n    return (\n        <ProjectPage>\n            <SubredditContainer>\n                <SubredditWrapper>\n                    {subreddits.map(subreddit => {\n                        return <SubredditButton\n                            key={subreddit} name={subreddit} onClick={handleActiveSub} selected={activeSub === subreddit}>{subreddit}</SubredditButton>\n                    })}\n                </SubredditWrapper>\n            </SubredditContainer>\n            <PostsWrapper>\n                {posts.map((post, i) => {\n                    const selected = (selectedPost === i)\n                    const created = format(new Date(post.data.created_utc * 1000), 'MM/dd p').split(' ')\n                    return (\n                        <PostWrapper key={post.data.id} selected={selected}>\n                            <Post onClick={(e) => handleClickOnPost(e, post.data.permalink, i)}>\n                                <PostHeader><HeaderArrow />{post.data.ups} <TimeSpan>{created[0] + ' at ' + created[1] + created[2]}</TimeSpan></PostHeader>\n                                <PostBody>{post.data.title}</PostBody>\n                            </Post>\n                            <Prompt selected={selected}>\n                                <PromptTextWrapper selected={selected}>\n                                    <PromptText>{activeStory.length > 0 && currWord === 0 ? activeStory.length + ' words' : activeStory[currWord]}</PromptText>\n                                </PromptTextWrapper>\n                                <PromptControlsWrapper selected={selected}>\n                                    <WpmWrapper>\n                                        <WpmInput value={wpm} onChange={(e) => setWpm(e.target.value)} /> words per minute\n                                    </WpmWrapper>\n                                    <PlayButton onClick={() => setPlay(!play)}>{play ? <PauseIcon /> : <PlayIcon />}</PlayButton>\n                                    <StorySelect>\n                                        <LeftArrow onClick={handlePrevStory} />\n                                        {/* <RewindArrow onClick={handleRewindStory} /> */}\n                                        {currStory + 1} of {storyCount}\n                                        <RightArrow onClick={handleNextStory} />\n                                    </StorySelect>\n                                </PromptControlsWrapper>\n                            </Prompt>\n                        </PostWrapper>\n                    )\n                })}\n            </PostsWrapper>                         \n        </ProjectPage>\n    )\n}\n\nexport default Home\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const getNewPosts = (activeSub) => {\n  // get requests should not have a body\n  return axios({\n    url: apiUrl + `/posts/new/${activeSub}`,\n    method: 'GET'\n  })\n}\n\nexport const getSavedPosts = (activeSub) => {\n  return axios({\n    url: apiUrl + `/posts/saved/${activeSub}/`,\n    method: 'GET'\n  })\n}\n\nexport const getPostContents = (url) => {\n  // get requests should not have a body\n  return axios({\n    url: apiUrl + `/posts/post/?link=${url}`,\n    method: 'GET'\n  })\n}\n\nexport const getSavedPost = (activeSub) => {\n  // get requests should not have a body\n  return axios({\n    url: apiUrl + `/posts/savedPost/${activeSub}`,\n    method: 'GET'\n  })\n}\n\nexport const savePost = (body) => {\n  console.log(body)\n  return axios({\n    url: apiUrl + '/posts/',\n    method: 'POST',\n    headers: { Authorization: `Bearer ${body.owner.token}` },\n    data: {\n      message: {\n        board: body.board,\n        text: body.text,\n        owner: body.owner\n      }\n    }\n  })\n}\n\nexport const deletePost = (id, user) => {\n  return axios({\n    url: apiUrl + `/posts/${id}`,\n    method: 'DELETE',\n    headers: { Authorization: `Bearer ${user.token}` }\n  })\n}\n\nexport const changePost = (id, text, user) => {\n  return axios({\n    url: apiUrl + `/posts/${id}`,\n    headers: { Authorization: `Bearer ${user.token}` },\n    method: 'PATCH',\n    data: {\n      message: {\n        text\n      }\n    }\n  })\n}\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n    height: ${state => state.windowHeight}px;\n    overflow: hidden;\n    padding: 3rem 20%;\n    background-color: #eee;\n\n    @media screen and (max-width: 700px) {\n        padding: 2%;\n        padding-top: 10%;\n    }\n`\n\nexport const PromptContainer = styled.div`\n    color: #222;\n    background: #55f;\n    padding: 4rem;\n    border-radius: 10px;\n    border: solid;\n    border-width: 1px;\n    border-color: #353535;\n    box-shadow: 1px 2px 15px 0px #444;\n    max-width: 600px;\n`\n\nexport const WordWrapper = styled.div`\n    height: 10rem;\n    width: 100%;\n    background: #f1f1f1;\n    border: solid;\n    border-color: #aaa;\n    border-width: 1px;\n    border-radius: 10px;\n    margin-bottom: 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const OptionWrapper = styled.div`\n    display: flex;\n    padding: 0.5rem 0.5rem 1rem 0.5rem;\n    width: 100%;\n    justify-content: space-around;\n    align-items: baseline;\n    color: #eee;\n    font-weight: 700;\n    font-size: 1.1rem;\n\n    @media screen and (max-width: 900px) {\n        font-size: 1rem;\n        padding: 0.5rem 0 1rem 0;\n        justify-content: space-between;\n    }\n\n    @media screen and (max-width: 600px) {\n        font-size: 0.9rem;\n    }\n`\n\nexport const StoryWrapper = styled.div``\n\nexport const WordCountWrapper = styled.div``\n\nexport const WpmWrapper = styled.div`\n    padding: 0;\n    margin: 0;\n`\n\nexport const ButtonWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n`\n\nexport const Word = styled.h2`\n    color: #222;\n`\n\nexport const WpmInput = styled.input`\n    width: 3rem;\n`\n\nexport const WpmSpan = styled.span``\n\nexport const StoryText = styled.p`\n`\n\nexport const WordCountText = styled.p`\n`\n\nexport const PlayButton = styled.button`\n    color: #111;\n    background: #70cE70;\n    height: 5rem;\n    width: 5rem;\n    border-radius: 50%;\n    font-size: 4rem;\n    font-weight: 800;\n    /* border: solid; */\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 1px 2px 7px 0px #444;\n\n    &:hover {\n        background: #60bE60;\n        color: #000;\n    }\n`\n\nexport const StorySelectButton = styled.button`\n    color: #111;\n    background: #70cE70;\n    height: 3rem;\n    width: 3rem;\n    border-radius: 50%;\n    font-size: 2rem;\n    font-weight: 800;\n    /* border: none; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 1px 2px 7px 0px #444;\n\n    &:hover {\n        background: #60bE60;\n        color: #000;\n    }\n`","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { \n    PageContainer,\n    PromptContainer,\n    WordWrapper,\n    Word,\n    OptionWrapper,\n    WordCountWrapper,\n    WpmWrapper,\n    WpmInput,\n    WpmSpan,\n    ButtonWrapper,\n    PlayButton,\n    StoryWrapper,\n    StoryText,\n    WordCountText,\n    StorySelectButton\n} from './PromptElements';\nimport { BiPlay, BiPause, BiArrowToLeft, BiArrowToRight } from 'react-icons/bi'\n\nconst Prompts = ({ posts, wpm, setWpm }) => {\n\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight - 48)\n\n    useEffect(() => {\n        window.addEventListener('resize', () => setWindowHeight(window.innerHeight - 48))\n    })\n\n    const { id } = useParams()\n    // const [content, setContent] = useState([])\n    const [currentCount, setCurrentCount] = useState(0)\n    const [activeStory, setActiveStory] = useState([])\n    const [activeWord, setActiveWord] = useState('')\n    const [storyCount, setStoryCount] = useState(1)\n    const [play, setPlay] = useState(false)\n\n    const wordDelay = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve('foo');\n        }, 60000/wpm);\n    });\n\n    const togglePause = () => {\n        setPlay(prev => !prev)\n    }\n\n    const handleWpm = (event) => {\n        setWpm(event.target.value)\n    }\n\n    useEffect(() => {\n\n        // console.log(posts.find(post => post.data.id === id))\n        // setContent(posts.find(post => post.data.id === id))\n        // console.log(content)\n        if (posts.length > 0) {\n            axios.get(`${posts.find(post => post.data.id === id).data.url}.json`)\n            .then(response => {\n                // setContent(response.data[1].data.children)\n                setStoryCount(response.data[1].data.children.length - 1)\n                if (response.data[1].data.children[1]) {\n                    setActiveStory(response.data[1].data.children[1].data.body.split(\" \"))\n                }\n                console.log(response.data[1].data.children[1].data.body.split(\" \"))\n            })\n            .catch(error => {\n                console.error(error)\n                return <Navigate to='/' />\n            })\n        }\n\n    // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        if (play && currentCount < activeStory.length) {\n            wordDelay\n                .then(() => {\n                    setActiveWord(activeStory[currentCount])\n                    setCurrentCount(prev => prev + 1)\n                })\n        }\n    // eslint-disable-next-line\n    }, [activeStory, currentCount, play])\n\n    if (posts.length === 0) {\n        return <Navigate to='/' />\n    }\n\n    return (\n        <PageContainer windowHeight={windowHeight}>\n            <PromptContainer>\n            <WordWrapper>\n                <Word>{activeWord}</Word>\n            </WordWrapper>\n            <OptionWrapper>\n                <StoryWrapper>\n                    <StoryText>Story: 1 of {storyCount > 0 ? `${storyCount}` : '0'}</StoryText>\n                </StoryWrapper>\n                <WordCountWrapper>\n                    <WordCountText>\n                        {activeStory.length} words\n                    </WordCountText>\n                </WordCountWrapper>\n                <WpmWrapper>\n                    <WpmInput type=\"text\" value={wpm} onChange={handleWpm} />\n                    <WpmSpan> wpm</WpmSpan>\n                </WpmWrapper>\n            </OptionWrapper>\n            <ButtonWrapper>\n                    <StorySelectButton><BiArrowToLeft /></StorySelectButton>\n                    <PlayButton onClick={togglePause}>{play ? <BiPause /> : <BiPlay />}</PlayButton>\n                    <StorySelectButton><BiArrowToRight /></StorySelectButton>\n            </ButtonWrapper>\n            </PromptContainer>\n        </PageContainer>\n    )\n}\n\nexport default Prompts\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\n\nimport { signUp, signIn } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Navigate } from 'react-router-dom'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() => {\n      this.setState({\n        navigate: true\n      })\n    })\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default SignUp\n","import React, { Component } from 'react'\n\nimport { signIn } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Navigate } from 'react-router-dom'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() => this.setState({ navigate: true }))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../api/auth'\n\nconst SignOut = ({ clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  useEffect(() => {\n    signOut(user)\n\n    setShouldNavigate(true)\n    clearUser()\n  // eslint-disable-next-line\n  }, [])\n\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { Component } from 'react'\n// import { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Navigate } from 'react-router-dom'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { user } = this.props\n\n  changePassword(this.state, user)\n    .then(() => this.setState({ navigate: true }))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default ChangePassword\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom'\n\nimport Header from '../Layout/Header'\nimport Home from '../Project/Home'\nimport Prompts from 'Project/Prompts';\n\n// AUTH ROUTES\nimport SignUp from '../Auth/SignUp'\nimport SignIn from '../Auth/SignIn'\nimport SignOut from '../Auth/SignOut'\nimport ChangePassword from '../Auth/ChangePassword'\n\nimport history from '../browserHistory';\n// import Project from 'Project';\n// import PageError from 'shared/components/PageError';\n\nconst ProjectRoutes = ({ user, setUser, clearUser, posts, setPosts, wpm, setWpm }) => (\n  <main>\n    <Header user={user} />\n    <Routes history={history}>\n      <Route\n        path='/sign-up'\n        element={\n          <SignUp setUser={setUser} />\n        }\n      />\n      <Route\n        path='/sign-in'\n        element={\n          <SignIn setUser={setUser} />\n        }\n      />\n      <Route\n        path='/sign-out'\n        element={\n          <SignOut\n            clearUser={clearUser}\n            user={user}\n          />\n        }\n      />\n      <Route\n        path='/change-password'\n        element={\n          <ChangePassword user={user} />\n        }\n      />\n      <Route\n        path='/'\n        element={<Home \n          posts={posts}\n          setPosts={setPosts} />}\n      />\n      <Route\n        path='/story/:id'\n        element={<Prompts posts={posts} wpm={wpm} setWpm={setWpm} />}\n      />\n    </Routes>\n  </main>\n);\n\nexport default ProjectRoutes;\n","import React, { Fragment, useState } from 'react';\n\nimport ProjectRoutes from './Routes';\n\nimport './fontStyles.css';\n\nconst App = () => {\n\n  // creating a redux store of data that needs to be used globally\n  const [user, setUser] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [wpm, setWpm] = useState(250)\n\n  const clearUser = () => {\n    setUser(null)\n  }\n\n  return (\n  <Fragment>\n    {/* handles browser routing */}\n    <ProjectRoutes \n      user={user} \n      setUser={setUser} \n      clearUser={clearUser}\n      posts={posts}\n      wpm={wpm}\n      setWpm={setWpm}\n      setPosts={setPosts}\n      />\n  </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}