{"version":3,"sources":["Layout/Header/Navbar.module.css","Layout/Header/index.jsx","Project/Home/Styles.js","Project/Home/index.jsx","Project/Prompts/PromptElements.js","Project/Prompts/index.jsx","apiConfig.js","api/auth.js","Auth/SignUp.js","Auth/SignIn.js","Auth/SignOut.js","Auth/ChangePassword.js","browserHistory.js","App/Routes.jsx","App/index.jsx","index.jsx"],"names":["module","exports","Header","user","Navbar","className","styles","navbar","to","style","color","textDecoration","fontSize","display","alignItems","ProjectPage","styled","div","SubredditContainer","SubredditWrapper","SubredditButton","button","state","selected","PostsWrapper","PostWrapper","Post","PostHeader","PostBody","p","Prompt","PromptTextWrapper","PromptText","PromptControlsWrapper","ControlWrapper","WpmWrapper","StorySelect","PlayButton","PlayIcon","BiPlay","PauseIcon","BiPause","RewindArrow","RiRewindFill","LeftArrow","FaStepBackward","RightArrow","FaStepForward","Home","posts","setPosts","subs","useState","subreddits","activeSub","setActiveSub","selectedPost","setSelectedPost","storyCount","setStoryCount","allStories","setAllStories","activeStory","setActiveStory","currStory","setCurrStory","play","setPlay","currWord","setCurrWord","wpm","handleActiveSub","event","target","name","handlePrevStory","prev","handleRewindStory","handleNextStory","wordDelay","Promise","resolve","reject","setTimeout","useEffect","axios","url","method","then","response","data","children","filter","child","num_comments","catch","console","error","length","body","split","map","subreddit","onClick","post","i","e","get","stories","author","expandPost","ups","title","id","PageContainer","windowHeight","PromptContainer","WordWrapper","OptionWrapper","StoryWrapper","WordCountWrapper","ButtonWrapper","Word","h2","WpmInput","input","WpmSpan","span","StoryText","WordCountText","StorySelectButton","Prompts","setWpm","window","innerHeight","setWindowHeight","addEventListener","useParams","currentCount","setCurrentCount","activeWord","setActiveWord","find","log","type","value","onChange","apiUrls","apiUrl","location","hostname","signIn","credentials","email","password","SignUp","props","handleChange","setState","onSignUp","preventDefault","setUser","password_confirmation","passwordConfirmation","res","navigate","this","Form","onSubmit","Group","controlId","Label","Control","required","placeholder","Button","variant","Component","SignIn","onSignIn","SignOut","clearUser","shouldNavigate","setShouldNavigate","headers","Authorization","token","signOut","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","createBrowserHistory","ProjectRoutes","history","path","element","App","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca32fdf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__gPR8y\",\"navItem\":\"Navbar_navItem__24Q0H\",\"menu\":\"Navbar_menu__1dnb_\"};","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Navbar.module.css'\n\n// const authenticatedOptions = (\n//   <Fragment>\n//     <NavDropdown>\n//       <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n//       <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n//     </NavDropdown>\n//   </Fragment>\n// )\n\n// const unauthenticatedOptions = (\n//   <Fragment>\n//     <NavLink to='/sign-up' className='nav-link' style={{ color: '#FFF' }}>Sign Up</NavLink>\n//     <NavLink to='/sign-in' className='nav-link' style={{ color: '#FFF' }}>Sign In</NavLink>\n//   </Fragment>\n// )\n\nconst Header = ({ user }) => (\n  <Navbar className={ styles.navbar }>\n    {/* <Navbar.Toggle aria-controls='basic-navbar-nav' /> */}\n      <NavLink to='/' style={{ color: '#FFF', textDecoration: 'none', fontSize: '2rem', display: 'flex', alignItems: 'center' }}>Speed Reader</NavLink>\n    {/* <Navbar.Collapse id='basic-navbar-nav' className={styles.menu}>\n      <Nav>\n        {user ? authenticatedOptions : unauthenticatedOptions}\n        {user && (\n          <span className='navbar-text' style={{ color: '#FFF' }}>{user.email}</span>\n        )}\n      </Nav>\n    </Navbar.Collapse> */}\n  </Navbar>\n)\n\nexport default Header\n","import styled from 'styled-components';\nimport {\n  BiPause,\n  BiPlay\n} from 'react-icons/bi';\n\nimport {\n  FaStepBackward,\n  FaStepForward\n} from 'react-icons/fa'\n\nimport {\n  RiRewindFill\n} from 'react-icons/ri'\n\nexport const ProjectPage = styled.div`\n  padding: 1rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  background: #FFEEE7;\n\n  @media screen and (max-width: 1100px) {\n    padding: 2% 3%;\n  }\n`\n\nexport const SubredditContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const SubredditWrapper = styled.div`\n  display: flex; \n  justify-content: flex-start;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`\n\nexport const SubredditButton = styled.button`\n  font-family: 'Merriweather Sans';\n  font-size: 0.75rem;\n  padding: 0 0.5rem;\n  height: 2rem;\n  margin: 0 0.25rem;\n  border-radius: 80px;\n  background: ${state => state.selected ? '#D02500' : '#6B1603'};\n  box-shadow: 0px 8px 24px rgba(208, 37, 0, 0.09);\n  border: none;\n  color: #fff;\n`\n\nexport const PostsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10%;\n\n  @media screen and (max-width: 600px) {\n    padding: 1%;\n  }\n`\n\nexport const PostWrapper = styled.div`\n  box-shadow: 0px 8px 24px rgba(208, 37, 0, 0.09);\n  margin: 0;\n  margin-bottom: 1.5rem;\n  /* making the edges \"disappear\" */\n  border-radius: 20px; \n  background-color: ${state => state.selected ? '#D02500' : '#FFEEE7'};\n\n  transition: all 100ms ease-in-out;\n`\n\nexport const Post = styled.div`\n  cursor: pointer;\n  border-radius: 8px;\n  background: #FFF;\n  padding: 1.5rem;\n  color: #6B1603;\n\n  &:hover {\n    color: #D02500;\n  }\n`\n\nexport const PostHeader = styled.div`\n  font-size: 0.75rem;\n  color: #D02500;\n`\n\nexport const PostBody = styled.p`\n`\n\n\nexport const Prompt = styled.div`\n  height: ${state => state.selected ? 15 : 0 }rem;\n  width: 100%;\n  background: #D02500;\n  border-radius: 0 0 20px 20px;\n  transition: all 100ms ease-in-out;\n  position: relative;\n`\n\nexport const PromptTextWrapper = styled.div`\n  height: 10rem;\n  width: 100%;\n  display: ${state => state.selected ? 'flex' : 'none'};\n  align-items: center;\n  justify-content: center;\n`\n\nexport const PromptText = styled.p`\n  color: #fff;\n  font-size: 4rem;\n`\n\nexport const PromptControlsWrapper = styled.div`\n  position: absolute;\n  display: ${state => state.selected ? 'flex' : 'none'};\n  transition: all 100ms ease-in-out;\n  justify-content: center;\n  align-items: center;\n  height: 5rem;\n  bottom: 0;\n  width: 100%;\n  background-color: #6B1603;\n  border-radius: 0 0 8px 8px;\n`\n\nconst ControlWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  font-size: 0.9rem;\n  color: #fff;\n  max-width: 40%;\n  margin: 0 1rem;\n`\n\nexport const WpmWrapper = styled(ControlWrapper)`\n  left: 0;\n  border-radius: 0 0 0 8px;\n`\n\nexport const StorySelect = styled(ControlWrapper)`\n  right: 0;\n  border-radius: 0 0 8px 0;\n`\n\nexport const PlayButton = styled.button`\n  position: relative;\n  border: none;\n  background-color: #fff;\n  border-radius: 999px;\n  height: 3rem;\n  width: 3rem;\n  font-size: 2.5rem;\n`\n\nexport const PlayIcon = styled(BiPlay)`\n  position: absolute;\n  color: #6B1603;\n  left: 0.4rem;\n  top: 0.25rem;\n`\n\nexport const PauseIcon = styled(BiPause)`\n  position: absolute;\n  color: #6B1603;\n  left: 0.25rem;\n  top: 0.25rem;\n`\n\nexport const RewindArrow = styled(RiRewindFill)`\n  margin: 0 0.5rem 0 0.5rem;\n  font-size: 1.2em;\n`\n\nexport const LeftArrow = styled(FaStepBackward)`\n  margin: 0;\n`\n\nexport const RightArrow = styled(FaStepForward)`\n  margin: 0 0.5rem;\n`","import React, { useEffect, useState } from 'react';\nimport {\n    PostWrapper,\n    Post,\n    PostBody,\n    PostHeader,\n    PostsWrapper,\n    ProjectPage,\n    SubredditButton,\n    SubredditContainer,\n    SubredditWrapper,\n    Prompt,\n    PromptTextWrapper,\n    PromptText,\n    PromptControlsWrapper,\n    WpmWrapper,\n    PlayButton,\n    StorySelect,\n    PlayIcon,\n    PauseIcon,\n    LeftArrow,\n    RightArrow,\n    RewindArrow\n} from './Styles';\n// import React, { useEffect, useState } from 'react';\n// import { getExample, createExample } from '../../api/examples'\n\nimport axios from 'axios';\n\nconst Home = ({ user, posts, setPosts }) => {\n\n    // const [item, setItems] = useState('Hello world!')\n\n    // useEffect(() => {\n    //     getExample(example._id, user)\n    //     .then(() => {\n    //         setItems('Hello World!')\n    //     })\n    //     .catch(console.error)\n    // }, [])\n\n    // imafishyfriend@gmail.com\n    // limited1Fishy!\n\n    const subs = [\n        'WritingPrompts',\n        'AskReddit'\n    ]\n\n    // subreddit state\n    const [subreddits] = useState(subs)\n    const [activeSub, setActiveSub] = useState(subs[0])\n\n    // select story state\n    const [selectedPost, setSelectedPost] = useState(-1)\n    const [storyCount, setStoryCount] = useState(1)\n    const [allStories, setAllStories] = useState([])\n    const [activeStory, setActiveStory] = useState([])\n    const [currStory, setCurrStory] = useState(0)\n\n    // play current story state\n    const [play, setPlay] = useState(false)\n    const [currWord, setCurrWord] = useState(0)\n    const [wpm] = useState(250)\n\n    const handleActiveSub = ( event ) => {\n        setActiveSub(event.target.name)\n    }\n\n    const expandPost = (e, url, i) => {\n        setPlay(false)\n        setCurrWord(0)\n\n        if (selectedPost === i) {\n            setSelectedPost(-1)\n            setActiveStory([])\n        } else {\n            setSelectedPost(i)\n            setCurrStory(0)\n\n            axios.get(`${url}.json`)\n            .then(response => {\n                // console.log(response.data)\n                if (response.data[1].data.children.length > 0) {\n                    const stories = response.data[1].data.children.filter(post => post.data.author !== 'AutoModerator')\n                    setAllStories(stories)\n                    setActiveStory(stories[0].data.body.split(' '))\n                    setStoryCount(stories.length)\n                } else {\n                    setAllStories([])\n                    setActiveStory([])\n                    setStoryCount(0)\n                }\n            })\n        }\n        \n    }\n\n    const handlePrevStory = () => {\n        if (currWord > 10) {\n            setCurrWord(0)\n        }\n        else if (currStory > 0) {\n            setCurrStory(prev => prev - 1)\n            setCurrWord(0)\n        }\n    }\n\n    const handleRewindStory = () => {\n        if (currWord > 10) {\n            setCurrWord(prev => prev - 50)\n        } else {\n            setCurrWord(0)\n        }\n    }\n\n    const handleNextStory = () => {\n        if (currStory < storyCount - 1) {\n            setCurrStory(prev => prev + 1)\n            setCurrWord(0)\n        }\n    }\n\n    const wordDelay = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve('foo');\n        }, 60000/wpm);\n    });\n\n    useEffect(() => {\n        axios({\n            url: `https://www.reddit.com/r/${activeSub}/top/.json`,\n            method: 'GET'\n        })\n          .then(response => {\n            // console.log(response.data.data.children)\n            // console.log(response.data.data.children.filter(child => child.data.num_comments > 1))\n\n            // makes sure each post has at least one response, or filters it\n            setPosts(response.data.data.children.filter(child => child.data.num_comments > 1))\n          })\n          .catch(console.error)\n    // eslint-disable-next-line\n    }, [activeSub])\n\n    useEffect(() => {\n        if (allStories.length > 0) {\n            setActiveStory(allStories[currStory].data.body.split(' '))\n        }\n    // eslint-disable-next-line\n    }, [currStory])\n\n    useEffect(() => {\n        if (play && currWord < activeStory.length) {\n            wordDelay\n                .then(() => {\n                    setCurrWord(prev => prev + 1)\n                })\n        }\n    // eslint-disable-next-line\n    }, [activeStory, currWord, play])\n\n    // console.log(activeStory)\n    return (\n        <ProjectPage>\n            <SubredditContainer>\n                <SubredditWrapper>\n                    {subreddits.map(subreddit => {\n                        return <SubredditButton\n                            key={subreddit} name={subreddit} onClick={handleActiveSub} selected={activeSub === subreddit}>{subreddit}</SubredditButton>\n                    })}\n                </SubredditWrapper>\n            </SubredditContainer>\n            <PostsWrapper>\n                {posts.map((post, i) => {\n                    const selected = (selectedPost === i)\n                    return (\n                        <PostWrapper key={post.data.id} selected={selected}>\n                            <Post onClick={(e) => expandPost(e, post.data.url, i)}>\n                                <PostHeader>{post.data.ups}</PostHeader>\n                                <PostBody>{post.data.title}</PostBody>\n                            </Post>\n                            <Prompt selected={selected}>\n                                <PromptTextWrapper selected={selected}>\n                                    <PromptText>{activeStory.length > 0 && activeStory[currWord]}</PromptText>\n                                </PromptTextWrapper>\n                                <PromptControlsWrapper selected={selected}>\n                                    <WpmWrapper>{activeStory.length} words at 250 wpm</WpmWrapper>\n                                    <PlayButton onClick={() => setPlay(!play)}>{play ? <PauseIcon /> : <PlayIcon />}</PlayButton>\n                                    <StorySelect>\n                                        <LeftArrow onClick={handlePrevStory} />\n                                        <RewindArrow onClick={handleRewindStory} />\n                                        {currStory + 1} of {storyCount}\n                                        <RightArrow onClick={handleNextStory} />\n                                    </StorySelect>\n                                </PromptControlsWrapper>\n                            </Prompt>\n                        </PostWrapper>\n                    )\n                })}\n            </PostsWrapper>                         \n        </ProjectPage>\n    )\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n    height: ${state => state.windowHeight}px;\n    overflow: hidden;\n    padding: 3rem 20%;\n    background-color: #eee;\n\n    @media screen and (max-width: 700px) {\n        padding: 2%;\n        padding-top: 10%;\n    }\n`\n\nexport const PromptContainer = styled.div`\n    color: #222;\n    background: #55f;\n    padding: 4rem;\n    border-radius: 10px;\n    border: solid;\n    border-width: 1px;\n    border-color: #353535;\n    box-shadow: 1px 2px 15px 0px #444;\n    max-width: 600px;\n`\n\nexport const WordWrapper = styled.div`\n    height: 10rem;\n    width: 100%;\n    background: #f1f1f1;\n    border: solid;\n    border-color: #aaa;\n    border-width: 1px;\n    border-radius: 10px;\n    margin-bottom: 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const OptionWrapper = styled.div`\n    display: flex;\n    padding: 0.5rem 0.5rem 1rem 0.5rem;\n    width: 100%;\n    justify-content: space-around;\n    align-items: baseline;\n    color: #eee;\n    font-weight: 700;\n    font-size: 1.1rem;\n\n    @media screen and (max-width: 900px) {\n        font-size: 1rem;\n        padding: 0.5rem 0 1rem 0;\n        justify-content: space-between;\n    }\n\n    @media screen and (max-width: 600px) {\n        font-size: 0.9rem;\n    }\n`\n\nexport const StoryWrapper = styled.div``\n\nexport const WordCountWrapper = styled.div``\n\nexport const WpmWrapper = styled.div`\n    padding: 0;\n    margin: 0;\n`\n\nexport const ButtonWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n`\n\nexport const Word = styled.h2`\n    color: #222;\n`\n\nexport const WpmInput = styled.input`\n    width: 3rem;\n`\n\nexport const WpmSpan = styled.span``\n\nexport const StoryText = styled.p`\n`\n\nexport const WordCountText = styled.p`\n`\n\nexport const PlayButton = styled.button`\n    color: #111;\n    background: #70cE70;\n    height: 5rem;\n    width: 5rem;\n    border-radius: 50%;\n    font-size: 4rem;\n    font-weight: 800;\n    /* border: solid; */\n    margin: 0 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 1px 2px 7px 0px #444;\n\n    &:hover {\n        background: #60bE60;\n        color: #000;\n    }\n`\n\nexport const StorySelectButton = styled.button`\n    color: #111;\n    background: #70cE70;\n    height: 3rem;\n    width: 3rem;\n    border-radius: 50%;\n    font-size: 2rem;\n    font-weight: 800;\n    /* border: none; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 1px 2px 7px 0px #444;\n\n    &:hover {\n        background: #60bE60;\n        color: #000;\n    }\n`","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { \n    PageContainer,\n    PromptContainer,\n    WordWrapper,\n    Word,\n    OptionWrapper,\n    WordCountWrapper,\n    WpmWrapper,\n    WpmInput,\n    WpmSpan,\n    ButtonWrapper,\n    PlayButton,\n    StoryWrapper,\n    StoryText,\n    WordCountText,\n    StorySelectButton\n} from './PromptElements';\nimport { BiPlay, BiPause, BiArrowToLeft, BiArrowToRight } from 'react-icons/bi'\n\nconst Prompts = ({ posts, wpm, setWpm }) => {\n\n    const [windowHeight, setWindowHeight] = useState(window.innerHeight - 48)\n\n    useEffect(() => {\n        window.addEventListener('resize', () => setWindowHeight(window.innerHeight - 48))\n    })\n\n    const { id } = useParams()\n    // const [content, setContent] = useState([])\n    const [currentCount, setCurrentCount] = useState(0)\n    const [activeStory, setActiveStory] = useState([])\n    const [activeWord, setActiveWord] = useState('')\n    const [storyCount, setStoryCount] = useState(1)\n    const [play, setPlay] = useState(false)\n\n    const wordDelay = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve('foo');\n        }, 60000/wpm);\n    });\n\n    const togglePause = () => {\n        setPlay(prev => !prev)\n    }\n\n    const handleWpm = (event) => {\n        setWpm(event.target.value)\n    }\n\n    useEffect(() => {\n\n        // console.log(posts.find(post => post.data.id === id))\n        // setContent(posts.find(post => post.data.id === id))\n        // console.log(content)\n        if (posts.length > 0) {\n            axios.get(`${posts.find(post => post.data.id === id).data.url}.json`)\n            .then(response => {\n                // setContent(response.data[1].data.children)\n                setStoryCount(response.data[1].data.children.length - 1)\n                if (response.data[1].data.children[1]) {\n                    setActiveStory(response.data[1].data.children[1].data.body.split(\" \"))\n                }\n                console.log(response.data[1].data.children[1].data.body.split(\" \"))\n            })\n            .catch(error => {\n                console.error(error)\n                return <Navigate to='/' />\n            })\n        }\n\n    // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        if (play && currentCount < activeStory.length) {\n            wordDelay\n                .then(() => {\n                    setActiveWord(activeStory[currentCount])\n                    setCurrentCount(prev => prev + 1)\n                })\n        }\n    // eslint-disable-next-line\n    }, [activeStory, currentCount, play])\n\n    if (posts.length === 0) {\n        return <Navigate to='/' />\n    }\n\n    return (\n        <PageContainer windowHeight={windowHeight}>\n            <PromptContainer>\n            <WordWrapper>\n                <Word>{activeWord}</Word>\n            </WordWrapper>\n            <OptionWrapper>\n                <StoryWrapper>\n                    <StoryText>Story: 1 of {storyCount > 0 ? `${storyCount}` : '0'}</StoryText>\n                </StoryWrapper>\n                <WordCountWrapper>\n                    <WordCountText>\n                        {activeStory.length} words\n                    </WordCountText>\n                </WordCountWrapper>\n                <WpmWrapper>\n                    <WpmInput type=\"text\" value={wpm} onChange={handleWpm} />\n                    <WpmSpan> wpm</WpmSpan>\n                </WpmWrapper>\n            </OptionWrapper>\n            <ButtonWrapper>\n                    <StorySelectButton><BiArrowToLeft /></StorySelectButton>\n                    <PlayButton onClick={togglePause}>{play ? <BiPause /> : <BiPlay />}</PlayButton>\n                    <StorySelectButton><BiArrowToRight /></StorySelectButton>\n            </ButtonWrapper>\n            </PromptContainer>\n        </PageContainer>\n    )\n}\n\nexport default Prompts\n","let apiUrl\nconst apiUrls = {\n  production: 'https://aqueous-forest-64376.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\n\nimport { signUp, signIn } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Navigate } from 'react-router-dom'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() => {\n      this.setState({\n        navigate: true\n      })\n    })\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default SignUp\n","import React, { Component } from 'react'\n\nimport { signIn } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Navigate } from 'react-router-dom'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() => this.setState({ navigate: true }))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../api/auth'\n\nconst SignOut = ({ clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  useEffect(() => {\n    signOut(user)\n\n    setShouldNavigate(true)\n    clearUser()\n  // eslint-disable-next-line\n  }, [])\n\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { Component } from 'react'\n// import { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Navigate } from 'react-router-dom'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      navigate: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { user } = this.props\n\n  changePassword(this.state, user)\n    .then(() => this.setState({ navigate: true }))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      console.error(error)\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  if (this.state.navigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default ChangePassword\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom'\n\nimport Header from '../Layout/Header'\nimport Home from '../Project/Home'\nimport Prompts from 'Project/Prompts';\n\n// AUTH ROUTES\nimport SignUp from '../Auth/SignUp'\nimport SignIn from '../Auth/SignIn'\nimport SignOut from '../Auth/SignOut'\nimport ChangePassword from '../Auth/ChangePassword'\n\nimport history from '../browserHistory';\n// import Project from 'Project';\n// import PageError from 'shared/components/PageError';\n\nconst ProjectRoutes = ({ user, setUser, clearUser, posts, setPosts, wpm, setWpm }) => (\n  <main>\n    <Header user={user} />\n    <Routes history={history}>\n      <Route\n        path='/sign-up'\n        element={\n          <SignUp setUser={setUser} />\n        }\n      />\n      <Route\n        path='/sign-in'\n        element={\n          <SignIn setUser={setUser} />\n        }\n      />\n      <Route\n        path='/sign-out'\n        element={\n          <SignOut\n            clearUser={clearUser}\n            user={user}\n          />\n        }\n      />\n      <Route\n        path='/change-password'\n        element={\n          <ChangePassword user={user} />\n        }\n      />\n      <Route\n        path='/'\n        element={<Home \n          posts={posts}\n          setPosts={setPosts} />}\n      />\n      <Route\n        path='/story/:id'\n        element={<Prompts posts={posts} wpm={wpm} setWpm={setWpm} />}\n      />\n    </Routes>\n  </main>\n);\n\nexport default ProjectRoutes;\n","import React, { Fragment, useState } from 'react';\n\nimport ProjectRoutes from './Routes';\n\nimport './fontStyles.css';\n\nconst App = () => {\n\n  // creating a redux store of data that needs to be used globally\n  const [user, setUser] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [wpm, setWpm] = useState(250)\n\n  const clearUser = () => {\n    setUser(null)\n  }\n\n  return (\n  <Fragment>\n    {/* handles browser routing */}\n    <ProjectRoutes \n      user={user} \n      setUser={setUser} \n      clearUser={clearUser}\n      posts={posts}\n      wpm={wpm}\n      setWpm={setWpm}\n      setPosts={setPosts}\n      />\n  </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}